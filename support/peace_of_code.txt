console.log(" ");
                                                    console.log("x: " + x.toString());
                                                    console.log("y: " + y.toString());
                                                    console.log("chk.i + x > 0: " + (chk.i + x > 0));
                                                    console.log("chk.i + x < cells - 1: " + (chk.i + x < cells - 1));
                                                    console.log("chk.j + y > 0: " + (chk.j + y > 0));
                                                    console.log("chk.j + y < cells - 1: " + (chk.j + y < cells - 1));
                                                    console.log("get_checker_type_by_ij(chk.i + x, chk.j + y, settings) != chk.checker_type: " + (get_checker_type_by_ij(chk.i + x, chk.j + y, settings) != chk.checker_type));
                                                    console.log("get_checker_type_by_ij(chk.i + x, chk.j + y, settings) != chk.checker_type + 2: " + (get_checker_type_by_ij(chk.i + x, chk.j + y, settings) != chk.checker_type + 2));
                                                    console.log("get_checker_type_by_ij(chk.i + x, chk.j + y, settings) > settings.board_dictionary.play: " + (get_checker_type_by_ij(chk.i + x, chk.j + y, settings) > settings.board_dictionary.play));
                                                    console.log("get_checker_type_by_ij(chk.i + 2 * x, chk.j + 2 * y, settings) == settings.board_dictionary.play: " + (get_checker_type_by_ij(chk.i + 2 * x, chk.j + 2 * y, settings) == settings.board_dictionary.play));
                                                    console.log(" ");
                                                    console.log(get_checker_type_by_ij(chk.i + x, chk.j + y, settings).toString() + " " + chk.checker_type.toString());